{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"20.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { Platform, IonicPage, NavController, NavParams, AlertController, ModalController, LoadingController } from 'ionic-angular';\nimport { stagger } from '@angular/core/src/animation/dsl';\nimport { ChatPage } from '../chat/chat';\nimport { EpxProvider } from '../../providers/epx/epx';\nimport { Validators, FormBuilder, FormGroup, FormControl, AbstractControl, FormControlName } from '@angular/forms';\nimport { regexValidators} from '../validators/validator'\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  // username: string='jaylord.lagud.hpo@gmail.com';\n  // password: string='jaylord.lagud.hpo@gmail.com';\n  // username: string = 'stan.lee@hpoutsourcinginc.com';\n  // password: string = 'VzOo$)dl';\n  username: string;\n  password: string;\n\n  email_validation: AbstractControl;\n  password_validation: AbstractControl;\n  formGroup: FormGroup;\n  test:FormControlName;\n  constructor(private formBuilder: FormBuilder, private modalController: ModalController,\n    private epxProvider: EpxProvider,\n    private loadingCtrl: LoadingController,\n    public navCtrl: NavController, public navParams: NavParams, public alertCtrl: AlertController) {\n      this.formGroup = formBuilder.group({\n        email:['',Validators.compose([\n          // Validators.pattern(regexValidators.email),\n          Validators.required\n        ])],\n        password:['',Validators.required]\n      });\n  \n      this.email_validation = this.formGroup.controls['email'];\n      this.password_validation = this.formGroup.controls['password'];\n  }\n\n  showAlert(title: string, message: string) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n\n  loginUser() {\n    let loading = this.loadingCtrl.create();\n    loading.present().then(() => {\n      this.epxProvider.getLogin(this.username, this.password).subscribe(result => {\n        if (result.authentication) {\n          // this.username = '';\n          // this.password = '';\n          loading.dismiss();\n          console.log('user id',result.ID);\n          this.epxProvider.saveData('ID', result.ID);\n          this.epxProvider.saveData('name', result.name);\n          this.epxProvider.saveData('authentication', result.authentication);\n          this.navCtrl.setRoot('MenuPage');\n        }\n        else {\n          this.showAlert('Login Failed', 'Invalid username or password');\n          loading.dismiss();\n        }\n      });\n    });\n  }\n  forgotPassword(){\n   this.forgotPasswordModal();\n  }\n  forgotPasswordModal(){\n    this.modalController.create('ForgotPasswordPage').present();\n  }\n  forgotPasswordAlert(){\n    let prompt = this.alertCtrl.create({\n      title: 'Forgot Password',\n      message: \"Enter you email address to request password reset.\",\n      inputs: [\n        {\n          name: 'email',\n          placeholder: 'Enter your email address'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Request',\n          handler: data => {\n            console.log('Request clicked');\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}