{"version":3,"sources":["../../src/pages/forgot-password/forgot-password.module.ts","../../src/pages/validators/validator.ts","../../src/pages/forgot-password/forgot-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACO;AAUvD;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QARpC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4EAAkB;aACnB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,4EAAkB,CAAC;aAC7C;SACF,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;ACZrC;AAAA,mHAAmH;AACnH,8GAA8G;AAC9G,2IAA2I;AAC3I,IAAM,iBAAiB,GAAG,wJAAwJ,CAAC;AAEnL,yHAAyH;AACzH,IAAM,eAAe,GAAG,gEAAgE,CAAC;AAElF,IAAM,eAAe,GAAG;IAC7B,KAAK,EAAE,iBAAiB;IACxB,QAAQ,EAAE,eAAe;CAC1B,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACXwC;AACgC;AACwB;AAC1C;AAExD;;;;;GAKG;AASH;IAIE,4BAAoB,WAAwB,EAAU,SAA0B,EAAS,OAAsB,EAAS,SAAoB;QAAxH,gBAAW,GAAX,WAAW,CAAa;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC1I,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;YACjC,KAAK,EAAC,CAAC,EAAE,EAAC,kEAAU,CAAC,OAAO,CAAC;oBAC3B,kEAAU,CAAC,OAAO,CAAC,8EAAe,CAAC,KAAK,CAAC;oBACzC,kEAAU,CAAC,QAAQ;iBACpB,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAED,2CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IACD,4CAAe,GAAf;QACE,6CAA6C;QAC7C,2BAA2B;QAC3B,iCAAiC;QACjC,IAAI;QACJ,QAAQ;QACR,iCAAiC;QACjC,yDAAyD;QACzD,IAAI;IACN,CAAC;IACD,sCAAS,GAAT,UAAU,KAAa,EAAE,OAAe;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,OAAO;YACjB,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IACD,sCAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAtCU,kBAAkB;QAN9B,wEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;WACG;SACpC,CAAC;2BAO4I;OAJjI,kBAAkB,CAuC9B;IAAD,CAAC;AAAA;SAvCY,kBAAkB,gB","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ForgotPasswordPage } from './forgot-password';\n\n@NgModule({\n  declarations: [\n    ForgotPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ForgotPasswordPage),\n  ],\n})\nexport class ForgotPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-password/forgot-password.module.ts","// The Angular email validator accepts an email like \"rob@example\", perhaps because \"rob@localhost\" could be valid.\r\n// The pureEmail regex does not accept \"ryan@example\" as a valid email address, which I think is a good thing.\r\n// See: EMAIL_REGEXP from https://github.com/angular/angular.js/blob/ffb6b2fb56d9ffcb051284965dd538629ea9687a/src/ng/directive/input.js#L16\r\nconst PURE_EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n// Passwords should be at least 8 characters long and should contain one number, one character and one special character.\r\nconst PASSWORD_REGEXP = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n\r\nexport const regexValidators = {\r\n  email: PURE_EMAIL_REGEXP,\r\n  password: PASSWORD_REGEXP\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/pages/validators/validator.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams,AlertController } from 'ionic-angular';\nimport { Validators, FormBuilder, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { regexValidators} from '../validators/validator'\n\n/**\n * Generated class for the ForgotPasswordPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-forgot-password',\n  templateUrl: 'forgot-password.html',\n})\n\n\nexport class ForgotPasswordPage {\n  email:AbstractControl;\n  formGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private alertCtrl: AlertController, public navCtrl: NavController, public navParams: NavParams) {\n    this.formGroup = formBuilder.group({\n      email:['',Validators.compose([\n        Validators.pattern(regexValidators.email),\n        Validators.required\n      ])]\n    });\n\n    this.email = this.formGroup.controls['email'];\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ForgotPasswordPage');\n  }\n  requestPassword(){\n    // if (/^[a-zA-Z0-9@.]+$/.test(this.email)) {\n    //   // this.navCtrl.pop();\n    //   console.log('request sent.')\n    // }\n    // else{\n    //   console.log('invalid email')\n    //   this.showAlert('Invalid','Input the correct email.')\n    // }\n  }\n  showAlert(title: string, message: string) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n  closePage(){\n    this.navCtrl.pop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-password/forgot-password.ts"],"sourceRoot":""}