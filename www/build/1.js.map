{"version":3,"sources":["../../src/pages/vault/vault.module.ts","../../src/pages/vault/vault.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VaultPage } from './vault';\n\n@NgModule({\n  declarations: [\n    VaultPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VaultPage),\n  ],\n})\nexport class VaultPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vault/vault.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, LoadingController } from 'ionic-angular';\nimport { EpxProvider } from '../../providers/epx/epx';\nimport { Observable } from 'rxjs/Observable';\nimport { CacheService } from 'ionic-cache';\nimport { VaultDetailsPage } from '../vault-details/vault-details';\nimport { DomSanitizer } from '@angular/platform-browser'\n\n@IonicPage()\n@Component({\n  selector: 'page-vault',\n  templateUrl: 'vault.html',\n})\nexport class VaultPage {\n  vaultList: any;\n  isLoading: boolean = true;\n  isRefresh: boolean = false;\n  page = 1;\n  perPage = 0;\n  totalData = 0;\n  totalPage = 0;\n\n  constructor(\n    private loadingCtrl: LoadingController, private epxProvider: EpxProvider, private cache: CacheService, private navCtrl: NavController) {\n    // Set TTL to 12h\n    cache.setDefaultTTL(60 * 60 * 12);\n    // Keep our cached results when device is offline!\n    cache.setOfflineInvalidate(false);\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad VaultPage');\n    this.LoadVault();\n  }\n  vaultDetails(vault) {\n    this.navCtrl.push('VaultDetailsPage', { data: vault });\n  }\n  LoadVault(refresher?) {\n    let url = this.epxProvider.vault_infinite_url;\n    let ttl = 60 * 60 * 12;\n    let delay_type = 'all';\n    let groupKey = 'vault-list';\n    this.page = 1;\n    let connected = this.epxProvider.isConnected();\n    console.log('connected: ', connected);\n    if (connected) {\n      this.epxProvider.getVaultInfinite(this.epxProvider.PAGE_SIZE, this.page).subscribe(data => { //Get data from url/api\n        let vault = Observable.of(data.vaults);\n        this.totalPage = data.number_of_page;\n        console.log('vault list', vault);\n        if (refresher) {\n          this.cache.loadFromDelayedObservable(url, vault, groupKey, ttl, delay_type).subscribe(data => {\n            this.vaultList = Object.keys(data).map(key => data[key]);\n            refresher.complete();\n          });\n        }\n        else {\n          this.cache.loadFromObservable(url, vault, groupKey).subscribe(data => {\n            this.vaultList = Object.keys(data).map(key => data[key]);\n          });\n        }\n        this.isLoading = false;\n        this.isRefresh = true;\n      }, error => {\n        console.log(error);\n        refresher.complete();\n      });\n    }\n    else {\n      this.epxProvider.getData(url).then(data => {\n        if(data != null){\n          let offline_data = Observable.of(data.value);\n          console.log('offline data: ', offline_data);\n          if (refresher) {\n            this.cache.loadFromDelayedObservable(url, offline_data, groupKey).subscribe(data => {\n              this.vaultList = data;\n              refresher.complete();\n            });\n          }\n          else {\n            this.cache.loadFromObservable(url, offline_data, groupKey).subscribe(data => {\n              this.vaultList = data;\n            });\n          }\n          this.isLoading = false;\n          this.isRefresh = true;\n        }\n        else{\n          console.log('offline data: ', data);\n        }\n      });\n    }\n    \n  }\n  //Pull to refresh page\n  forceReload(refresher) {\n    this.LoadVault(refresher);\n  }\n  doInfinite(infiniteScroll) {\n    console.log('Begin async operation');\n    this.epxProvider.getVaultInfinite(this.epxProvider.PAGE_SIZE,this.page + 1).subscribe(data => { //Get data from url/api\n      let vault = data.vaults;\n      let temp = Object.keys(vault).map(key => vault[key]);\n      for (let i = 0; i < temp.length; i++) {\n        this.vaultList.push(temp[i]);\n      }\n      infiniteScroll.complete();\n      this.isLoading = false;\n      this.isRefresh = true;\n      this.page++;\n      console.log('current page: ', this.page);\n    }, error => {\n      infiniteScroll.complete();\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vault/vault.ts"],"sourceRoot":""}