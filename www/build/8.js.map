{"version":3,"sources":["../../src/pages/solo/solo.module.ts","../../src/pages/solo/solo.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SoloPage } from './solo';\n\n@NgModule({\n  declarations: [\n    SoloPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SoloPage),\n  ],\n})\nexport class SoloPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/solo/solo.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { EpxProvider } from '../../providers/epx/epx';\nimport { Observable } from 'rxjs/Observable';\nimport { CacheService } from 'ionic-cache';\n\n@IonicPage()\n@Component({\n  selector: 'page-solo',\n  templateUrl: 'solo.html',\n})\nexport class SoloPage {\n\n  soloList: any;\n  isLoading: boolean = true;\n  isRefresh: boolean = false;\n  page = 1;\n  perPage = 0;\n  totalData = 0;\n  totalPage = 0;\n  constructor(\n    private loadingCtrl: LoadingController,\n    private epxProvider: EpxProvider,\n    private cache: CacheService,\n    public navCtrl: NavController, public navParams: NavParams) {\n    // Set TTL to 12h\n    cache.setDefaultTTL(60 * 60 * 12);\n    // Keep our cached results when device is offline!\n    cache.setOfflineInvalidate(false);\n    this.LoadSolo();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SoloPage');\n  }\n  soloDetails(solo) {\n    this.navCtrl.push('SoloDetailsPage', { data: solo });\n  }\n  LoadSolo(refresher?) {\n    let url = this.epxProvider.solo_url;\n    let ttl = 1000;\n    let delay_type = 'all';\n    let groupKey = 'solo-list';\n\n    this.epxProvider.getSoloInfinite(this.page).subscribe(data => { //Get data from url/api\n      //var solo = Observable.of(Object.keys(data).map(key => data[key])); //Convert object to array since angular accepts array for iteration\n      this.totalPage = data.number_of_page;\n      console.log('totalPage',this.totalPage);\n      if (refresher) {\n        this.cache.loadFromDelayedObservable(url, Observable.of(data), groupKey, null, delay_type).subscribe(data => {\n          this.soloList = Object.keys(data).map(key => data[key]);\n          refresher.complete();\n        });\n      }\n      else {\n        this.cache.loadFromObservable(url, Observable.of(data), groupKey).subscribe(data => {\n          this.soloList = Object.keys(data).map(key => data[key]);\n          console.log('solo list', data);\n        });\n      }\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n  doInfinite(infiniteScroll) {\n    console.log('Begin async operation');\n    this.page++;\n\n    this.epxProvider.getSoloInfinite(this.page).subscribe(data => { //Get data from url/api\n      let solo = data;\n      let temp = Object.keys(solo).map(key => solo[key]);\n\n      for (let i = 0; i < temp.length; i++) {\n        this.soloList.push(temp[i]);\n        console.log(data[i]);\n      }\n\n      infiniteScroll.complete();\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n\n  //Pull to refresh page\n  forceReload(refresher) {\n    this.LoadSolo(refresher);\n  }\n  soloByTags(tag) {\n    console.log('tag', tag);\n    this.navCtrl.push('SoloTagsPage', { data: tag });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/solo/solo.ts"],"sourceRoot":""}