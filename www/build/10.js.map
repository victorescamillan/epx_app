{"version":3,"sources":["../../src/pages/solo/solo.module.ts","../../src/pages/solo/solo.ts"],"names":[],"mappings":"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","file":"10.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SoloPage } from './solo';\n\n@NgModule({\n  declarations: [\n    SoloPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SoloPage),\n  ],\n})\nexport class SoloPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/solo/solo.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, Events, Content } from 'ionic-angular';\nimport { EpxProvider } from '../../providers/epx/epx';\nimport { Observable } from 'rxjs/Observable';\nimport { CacheService } from 'ionic-cache';\nimport { error } from '@firebase/database/dist/esm/src/core/util/util';\n\n@IonicPage()\n@Component({\n  selector: 'page-solo',\n  templateUrl: 'solo.html',\n})\nexport class SoloPage {\n  @ViewChild(Content) content: Content;\n  soloList: any;\n  isLoading: boolean = true;\n  isRefresh: boolean = false;\n  page = 1;\n  perPage = 0;\n  totalData = 0;\n  totalPage = 0;\n  constructor(\n    private events:Events,\n    private loadingCtrl: LoadingController,\n    private epxProvider: EpxProvider,\n    private cache: CacheService,\n    public navCtrl: NavController, public navParams: NavParams) {\n \n    // Keep our cached results when device is offline!\n    cache.setOfflineInvalidate(false);\n    \n  }\n  //Show badge if there is an update\n  ionViewDidEnter(){\n    this.epxProvider.getData(this.epxProvider.SOLO_BADGE).then(badge => {\n      if (badge != null && badge > 0) {\n        this.events.publish(this.epxProvider.SOLO_BADGE,badge);\n      }\n    });\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SoloPage');\n    this.LoadSolo();\n  }\n  soloDetails(solo) {\n    this.navCtrl.push('SoloDetailsPage', { data: solo });\n  }\n  LoadSolo(refresher?) {\n    let url = this.epxProvider.solo_infinite_url;\n    let ttl = this.epxProvider.TTL;\n    let delay_type = this.epxProvider.DELAY_TYPE;\n    let groupKey = 'solo-list';\n    this.page = 1;\n    let connected = this.epxProvider.isConnected();\n    console.log('connected: ', connected);\n    if(connected){\n      this.epxProvider.getSoloInfinite(this.page).subscribe(data => { //Get data from url/api\n        this.totalPage = data.number_of_page;\n        let solo = Observable.of(data.data);\n        console.log('totalPage',this.totalPage);\n        if (refresher) {\n          this.cache.loadFromDelayedObservable(url, solo, groupKey, ttl, delay_type).subscribe(data => {\n            this.soloList = Object.keys(data).map(key => data[key]);\n            refresher.complete();\n          });\n        }\n        else {\n          this.cache.loadFromObservable(url, solo, groupKey).subscribe(data => {\n            this.soloList = Object.keys(data).map(key => data[key]);\n          });\n        }\n        this.isLoading = false;\n        this.isRefresh = true;\n        this.epxProvider.updateNotification(this.epxProvider.SOLO_BADGE);\n      },error => {\n        console.log(error);\n        this.epxProvider.toastMessage('Internal Server Error!')\n      });\n    }\n    else{\n      this.epxProvider.getData(url).then(data => {\n        if(data != null){\n          let offline_data = Observable.of(data.value);\n          console.log('offline data: ', offline_data);\n          if (refresher) {\n            this.cache.loadFromDelayedObservable(url, offline_data, groupKey).subscribe(data => {\n              this.soloList = data;\n              refresher.complete();\n            });\n          }\n          else {\n            this.cache.loadFromObservable(url, offline_data, groupKey).subscribe(data => {\n              this.soloList = data;\n            });\n          }\n          this.isLoading = false;\n          this.isRefresh = true;\n        }\n        else{\n          console.log('offline data: ', data);\n          refresher.complete();\n        }\n      });\n    }\n   \n  }\n  //Pagination\n  doInfinite(infiniteScroll) {\n    console.log('Begin async operation');\n\n    this.epxProvider.getSoloInfinite(this.page + 1).subscribe(data => { //Get data from url/api\n      let solo = data.data;\n      let temp = Object.keys(solo).map(key => solo[key]);\n      for (let i = 0; i < temp.length; i++) {\n        this.soloList.push(temp[i]);\n        console.log(data[i]);\n      }\n      infiniteScroll.complete();\n      this.isLoading = false;\n      this.isRefresh = true;\n      this.page++;\n    },error => {\n      infiniteScroll.complete();\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n  //Pull to refresh page\n  forceReload(refresher) {\n    this.LoadSolo(refresher);\n  }\n  //Tags\n  soloByTags(tag) {\n    console.log('tag', tag);\n    this.navCtrl.push('SoloTagsPage', { data: tag });\n  }\n  ionSelected() {\n    console.log('solo selected');\n    let topDistance = this.content.getContentDimensions().scrollTop;\n    console.log('scroll top', topDistance);\n    if(topDistance > 10){\n      this.content.scrollToTop();\n    }\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/solo/solo.ts"],"sourceRoot":""}