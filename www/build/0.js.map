{"version":3,"sources":["../../src/pages/forgot-password/forgot-password.module.ts","../../src/pages/forgot-password/forgot-password.ts","../../src/pages/validators/validator.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ForgotPasswordPage } from './forgot-password';\n\n@NgModule({\n  declarations: [\n    ForgotPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ForgotPasswordPage),\n  ],\n})\nexport class ForgotPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-password/forgot-password.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams,AlertController } from 'ionic-angular';\nimport { Validators, FormBuilder, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { regexValidators} from '../validators/validator'\nimport { EpxProvider } from '../../providers/epx/epx';\n\n/**\n * Generated class for the ForgotPasswordPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-forgot-password',\n  templateUrl: 'forgot-password.html',\n})\n\n\nexport class ForgotPasswordPage {\n  email_control:AbstractControl;\n  formGroup: FormGroup;\n  email: string;\n  tap: number = 0;\n  constructor(private epxProvider: EpxProvider, private formBuilder: FormBuilder, private alertCtrl: AlertController, public navCtrl: NavController, public navParams: NavParams) {\n    this.formGroup = formBuilder.group({\n      email:['',Validators.compose([\n        Validators.pattern(regexValidators.email),\n        Validators.required\n      ])]\n    });\n\n    this.email_control = this.formGroup.controls['email'];\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ForgotPasswordPage');\n  }\n  requestPassword(){\n    console.log(this.email);\n    this.tap++;\n    if(this.tap <= 1){\n      this.epxProvider.requestForgotPassword(this.email).subscribe(res => {\n        if(res.success){\n          this.showAlert('Email Sent',res.message, true);\n        }\n        else{\n          this.showAlert('Invalid',res.message, false);\n        }\n      });\n    }\n  }\n  showAlert(title: string, message: string, success: boolean) {\n    this.tap = 0;\n    let alert = this.alertCtrl.create({\n      title: title,\n      subTitle: message,\n      buttons: [{\n        text: 'Close',\n        handler : data => {\n          if(success){\n            this.navCtrl.pop();  \n          }\n        }\n      }]\n    });\n    alert.present();\n  }\n  closePage(){\n    this.navCtrl.pop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-password/forgot-password.ts","// The Angular email validator accepts an email like \"rob@example\", perhaps because \"rob@localhost\" could be valid.\r\n// The pureEmail regex does not accept \"ryan@example\" as a valid email address, which I think is a good thing.\r\n// See: EMAIL_REGEXP from https://github.com/angular/angular.js/blob/ffb6b2fb56d9ffcb051284965dd538629ea9687a/src/ng/directive/input.js#L16\r\nconst PURE_EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n// Passwords should be at least 8 characters long and should contain one number, one character and one special character.\r\nconst PASSWORD_REGEXP = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n\r\nexport const regexValidators = {\r\n  email: PURE_EMAIL_REGEXP,\r\n  password: PASSWORD_REGEXP\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/pages/validators/validator.ts"],"sourceRoot":""}