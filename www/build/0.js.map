{"version":3,"sources":["../../src/pages/vault/vault.module.ts","../../src/pages/vault/vault.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VaultPage } from './vault';\n\n@NgModule({\n  declarations: [\n    VaultPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VaultPage),\n  ],\n})\nexport class VaultPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vault/vault.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { EpxProvider } from '../../providers/epx/epx';\nimport { Observable } from 'rxjs/Observable';\nimport { CacheService } from 'ionic-cache';\nimport { VaultDetailsPage } from '../vault-details/vault-details';\nimport { DomSanitizer } from '@angular/platform-browser'\n\n@IonicPage()\n@Component({\n  selector: 'page-vault',\n  templateUrl: 'vault.html',\n})\nexport class VaultPage {\n  vaultList: Observable<any>;\n  isLoading: boolean = true;\n  isRefresh: boolean = false;\n  constructor(\n    public domSanitizer: DomSanitizer,\n    private loadingCtrl: LoadingController,\n    private epxProvider: EpxProvider,\n    private cache: CacheService,\n    public navCtrl: NavController, public navParams: NavParams) {\n    // Set TTL to 12h\n    cache.setDefaultTTL(60 * 60 * 12);\n    // Keep our cached results when device is offline!\n    cache.setOfflineInvalidate(false);\n    this.LoadVault();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad VaultPage');\n  }\n  vaultDetails(vault) {\n    this.navCtrl.push('VaultDetailsPage', { data: vault });\n  }\n  LoadVault(refresher?) {\n    let url = this.epxProvider.vault_url;\n    let ttl = 1000;\n    let delay_type = 'all';\n    let groupKey = 'vault-list';\n\n    this.epxProvider.getVault().subscribe(data => { //Get data from url/api\n\n      var vault = Observable.of(Object.keys(data).map(key => data[key])); //Convert object to array since angular accepts array for iteration\n\n      console.log('vault list', vault);\n\n      if (refresher) {\n        this.vaultList = this.cache.loadFromDelayedObservable(url, vault, groupKey, null, delay_type);\n        this.vaultList.subscribe(data => {\n          refresher.complete();\n        });\n      }\n      else {\n        this.vaultList = this.cache.loadFromObservable(url, vault, groupKey);\n      }\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n  //Pull to refresh page\n  forceReload(refresher) {\n    this.LoadVault(refresher);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vault/vault.ts"],"sourceRoot":""}