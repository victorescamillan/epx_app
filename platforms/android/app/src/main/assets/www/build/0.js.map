{"version":3,"sources":["../../src/pages/vault/vault.module.ts","../../src/pages/vault/vault.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VaultPage } from './vault';\n\n@NgModule({\n  declarations: [\n    VaultPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VaultPage),\n  ],\n})\nexport class VaultPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vault/vault.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { EpxProvider } from '../../providers/epx/epx';\nimport { Observable } from 'rxjs/Observable';\nimport { CacheService } from 'ionic-cache';\nimport { VaultDetailsPage } from '../vault-details/vault-details';\nimport { DomSanitizer } from '@angular/platform-browser'\n\n@IonicPage()\n@Component({\n  selector: 'page-vault',\n  templateUrl: 'vault.html',\n})\nexport class VaultPage {\n  vaultList: any;\n  isLoading: boolean = true;\n  isRefresh: boolean = false;\n  page = 1;\n  perPage = 0;\n  totalData = 0;\n  totalPage = 0;\n\n  constructor(\n    public domSanitizer: DomSanitizer,\n    private loadingCtrl: LoadingController,\n    private epxProvider: EpxProvider,\n    private cache: CacheService,\n    public navCtrl: NavController, public navParams: NavParams) {\n    // Set TTL to 12h\n    cache.setDefaultTTL(60 * 60 * 12);\n    // Keep our cached results when device is offline!\n    cache.setOfflineInvalidate(false);\n    this.LoadVault();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad VaultPage');\n  }\n  vaultDetails(vault) {\n    this.navCtrl.push('VaultDetailsPage', { data: vault });\n  }\n  LoadVault(refresher?) {\n    let url = this.epxProvider.vault_url;\n    let ttl = 1000;\n    let delay_type = 'all';\n    let groupKey = 'vault-list';\n\n    this.epxProvider.getVaultInfinite(this.page).subscribe(data => { //Get data from url/api\n\n      //var vault = Observable.of(Object.keys(data).map(key => data[key])); //Convert object to array since angular accepts array for iteration\n      let vault = data.vaults;\n      this.totalPage = data.number_of_page;\n      console.log('vault list', vault);\n\n      if (refresher) {\n        this.cache.loadFromDelayedObservable(url, Observable.of(vault), groupKey, null, delay_type).subscribe(data =>{\n          this.vaultList = Object.keys(data).map(key => data[key]);\n          refresher.complete();\n        });\n      }\n      else {\n        this.cache.loadFromObservable(url, Observable.of(vault), groupKey).subscribe(data =>{\n          this.vaultList = Object.keys(data).map(key => data[key]);\n        });\n      }\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n  //Pull to refresh page\n  forceReload(refresher) {\n    this.LoadVault(refresher);\n  }\n  doInfinite(infiniteScroll) {\n    console.log('Begin async operation');\n    this.page++;\n\n    this.epxProvider.getVaultInfinite(this.page).subscribe(data => { //Get data from url/api\n      let vault = data.vaults;\n      let vault_temp = Object.keys(vault).map(key => vault[key]);\n      //let new_members = Observable.of(Object.keys(data).map(key => data[key])); //Convert object to array since angular accepts array for iteration\n      for (let i = 0; i < vault_temp.length; i++) {\n        this.vaultList.push(vault_temp[i]);\n        console.log(data[i]);\n      }\n      \n      infiniteScroll.complete();\n      this.isLoading = false;\n      this.isRefresh = true;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vault/vault.ts"],"sourceRoot":""}