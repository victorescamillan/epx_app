{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"23.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, ModalController, LoadingController } from 'ionic-angular';\r\nimport { EpxProvider } from '../../providers/epx/epx';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl, FormControlName } from '@angular/forms';\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n  // username: string='jaylord.lagud.hpo@gmail.com';\r\n  // password: string='jaylord.lagud.hpo@gmail.com';\r\n  // username: string = 'stan.lee@hpoutsourcinginc.com';\r\n  // password: string = 'VzOo$)dl';\r\n  username: string;\r\n  password: string;\r\n  licenseKey: string = \"COMETCHAT-0MZ10-PLO44-SWZAT-C9R3U\";\r\n  apiKey: string = \"50944x45d853898e582feaeaefe7db4df99b73\"; \r\n  email_validation: AbstractControl;\r\n  password_validation: AbstractControl;\r\n  formGroup: FormGroup;\r\n  test:FormControlName;\r\n  constructor(private formBuilder: FormBuilder, private modalController: ModalController,\r\n    private epxProvider: EpxProvider,\r\n    private loadingCtrl: LoadingController,\r\n    public navCtrl: NavController, public navParams: NavParams, public alertCtrl: AlertController) {\r\n      this.formGroup = formBuilder.group({\r\n        email:['',Validators.compose([\r\n          // Validators.pattern(regexValidators.email),\r\n          Validators.required\r\n        ])],\r\n        password:['',Validators.required]\r\n      });\r\n  \r\n      this.email_validation = this.formGroup.controls['email'];\r\n      this.password_validation = this.formGroup.controls['password'];\r\n  }\r\n  showAlert(title: string, message: string) {\r\n    let alert = this.alertCtrl.create({\r\n      title: title,\r\n      subTitle: message,\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  loginUser() {\r\n    let loading = this.loadingCtrl.create({content:'Logging in...'});\r\n    loading.present().then(() => {\r\n      this.epxProvider.getLogin(this.username, this.password).subscribe(result => {\r\n        if (result.authentication) {\r\n          this.epxProvider.saveData('ID', result.ID);\r\n          this.epxProvider.saveData('name', result.name);\r\n          this.epxProvider.saveData('email', result.email);\r\n          this.epxProvider.saveData('authentication', result.authentication);\r\n          this.epxProvider.saveData('enable_member', result.enable_member === '1' ? true : false);\r\n          this.epxProvider.saveData('enable_vault', result.enable_vault === '1' ? true : false);\r\n          this.epxProvider.saveData('enable_get_lucky', result.enable_get_lucky  === '1' ? true : false);\r\n          this.epxProvider.saveData('member_details', result);\r\n          loading.dismiss();\r\n          this.navCtrl.setRoot('MenuPage');\r\n        }\r\n        else {\r\n          this.showAlert('Login Failed', 'Invalid username or password');\r\n          loading.dismiss();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  forgotPassword(){\r\n   this.forgotPasswordModal();\r\n  }\r\n  forgotPasswordModal(){\r\n    this.modalController.create('ForgotPasswordPage').present();\r\n  }\r\n  forgotPasswordAlert(){\r\n    let prompt = this.alertCtrl.create({\r\n      title: 'Forgot Password',\r\n      message: \"Enter you email address to request password reset.\",\r\n      inputs: [\r\n        {\r\n          name: 'email',\r\n          placeholder: 'Enter your email address'\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => {\r\n            console.log('Cancel clicked');\r\n          }\r\n        },\r\n        {\r\n          text: 'Request',\r\n          handler: data => {\r\n            console.log('Request clicked');\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    prompt.present();\r\n  }\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad LoginPage');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}